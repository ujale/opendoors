{"uid":"32cab3a58002fff3","name":"test_ods_homepage_dashboard","fullName":"tests.test_ods_homepage_dashboard#test_ods_homepage_dashboard","historyId":"a55c58b338d1bd10e4b342b2a511f99d","time":{"start":1754526631062,"stop":1754526641092,"duration":10030},"description":"\n    Test the ODS Salesforce homepage dashboard, navigation, and tab visibility.\n    ","descriptionHtml":"<pre><code>Test the ODS Salesforce homepage dashboard, navigation, and tab visibility.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\"}\n  (Session info: chrome=138.0.7204.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n0   chromedriver                        0x0000000100ac8ea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000100ac0dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001006123ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000100659544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x000000010069a934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x000000010064d834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x0000000100a8bfc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x0000000100a8f22c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000100a6da08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000100a8fae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000100a5ea98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x0000000100aaf9d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000100aafb64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x0000000100ac09e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x00000001997dfc0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"af57c2f11837aefa3db54c1f100f2cdc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_ods_homepage_dashboard(driver):\n        \"\"\"\n        Test the ODS Salesforce homepage dashboard, navigation, and tab visibility.\n        \"\"\"\n        driver.get(\"https://opendoors--qa.sandbox.my.salesforce.com\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n    \n        # Login Page\n        driver.find_element(By.CSS_SELECTOR, \"#logo\")\n        driver.find_element(By.CSS_SELECTOR, \"#username\").send_keys(\"udeme@opendoorsatl.org.qa\")\n        driver.find_element(By.CSS_SELECTOR, \"#password\").send_keys(\"1Gconnect!\")\n        driver.find_element(By.CSS_SELECTOR, \"#Login\").click()\n    \n        # Home Page\n        driver.find_element(By.CSS_SELECTOR, \"div[class='slds-global-header__item'] div[class='slds-global-header__logo']\")\n        title = driver.find_element(By.XPATH, \"//span[@title='Open Doors']\")\n        print(\"Page title:\", title.text)\n    \n        # SF Tabs\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Home']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Accounts']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Contacts']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Properties']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Referrals']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Reports']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Dashboards']\")\n        driver.find_element(By.XPATH, \"//a[@class='slds-button slds-button_reset slds-context-bar__label-action']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='People']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Unit Availability']\")\n        driver.find_elements(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Applicants']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-p-right_small']\")\n        driver.find_element(By.XPATH, \"//lightning-icon[@class='slds-icon-utility-down slds-icon_container']//lightning-primitive-icon[@exportparts='icon']//*[name()='svg']\").click()\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate']//span[contains(text(),'Rental Concessions')]\")\n>       driver.find_element(By.XPATH, \"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\")\n\ntests/test_ods_homepage_dashboard.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1083de1c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...0001997dfc0c _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\"}\nE         (Session info: chrome=138.0.7204.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100ac8ea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000100ac0dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001006123ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000100659544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x000000010069a934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x000000010064d834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x0000000100a8bfc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x0000000100a8f22c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000100a6da08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000100a8fae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000100a5ea98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x0000000100aaf9d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000100aafb64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x0000000100ac09e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x00000001997dfc0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1754526255199,"stop":1754526255211,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1754526630524,"stop":1754526631061,"duration":537},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Test the ODS Salesforce homepage dashboard, navigation, and tab visibility.\n    ","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\"}\n  (Session info: chrome=138.0.7204.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n0   chromedriver                        0x0000000100ac8ea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000100ac0dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001006123ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000100659544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x000000010069a934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x000000010064d834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x0000000100a8bfc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x0000000100a8f22c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000100a6da08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000100a8fae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000100a5ea98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x0000000100aaf9d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000100aafb64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x0000000100ac09e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x00000001997dfc0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"af57c2f11837aefa3db54c1f100f2cdc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_ods_homepage_dashboard(driver):\n        \"\"\"\n        Test the ODS Salesforce homepage dashboard, navigation, and tab visibility.\n        \"\"\"\n        driver.get(\"https://opendoors--qa.sandbox.my.salesforce.com\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n    \n        # Login Page\n        driver.find_element(By.CSS_SELECTOR, \"#logo\")\n        driver.find_element(By.CSS_SELECTOR, \"#username\").send_keys(\"udeme@opendoorsatl.org.qa\")\n        driver.find_element(By.CSS_SELECTOR, \"#password\").send_keys(\"1Gconnect!\")\n        driver.find_element(By.CSS_SELECTOR, \"#Login\").click()\n    \n        # Home Page\n        driver.find_element(By.CSS_SELECTOR, \"div[class='slds-global-header__item'] div[class='slds-global-header__logo']\")\n        title = driver.find_element(By.XPATH, \"//span[@title='Open Doors']\")\n        print(\"Page title:\", title.text)\n    \n        # SF Tabs\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Home']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Accounts']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Contacts']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Properties']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Referrals']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Reports']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Dashboards']\")\n        driver.find_element(By.XPATH, \"//a[@class='slds-button slds-button_reset slds-context-bar__label-action']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='People']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Unit Availability']\")\n        driver.find_elements(By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='Applicants']\")\n        driver.find_element(By.XPATH, \"//span[@class='slds-p-right_small']\")\n        driver.find_element(By.XPATH, \"//lightning-icon[@class='slds-icon-utility-down slds-icon_container']//lightning-primitive-icon[@exportparts='icon']//*[name()='svg']\").click()\n        driver.find_element(By.XPATH, \"//span[@class='slds-truncate']//span[contains(text(),'Rental Concessions')]\")\n>       driver.find_element(By.XPATH, \"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\")\n\ntests/test_ods_homepage_dashboard.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1083de1c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...0001997dfc0c _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='slds-truncate']//span[contains(text(),'DocuSign Envelope Recipients')]\"}\nE         (Session info: chrome=138.0.7204.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100ac8ea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000100ac0dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001006123ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000100659544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x000000010069a934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x000000010064d834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x0000000100a8bfc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x0000000100a8f22c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000100a6da08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000100a8fae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000100a5ea98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x0000000100aaf9d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000100aafb64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x0000000100ac09e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x00000001997dfc0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001997dab80 thread_start + 8\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException","steps":[],"attachments":[{"uid":"2317507db01eebfc","name":"test_ods_homepage_dashboard_screenshot","source":"2317507db01eebfc.png","type":"image/png","size":208178},{"uid":"6d5dcaee96b683b4","name":"test_ods_homepage_dashboard_html","source":"6d5dcaee96b683b4.html","type":"text/html","size":340816},{"uid":"4fc6b476553183d1","name":"stdout","source":"4fc6b476553183d1.txt","type":"text/plain","size":23}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1754526641217,"stop":1754526641307,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_ods_homepage_dashboard"},{"name":"host","value":"Olajides-MacBook-Pro.local"},{"name":"thread","value":"16204-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_ods_homepage_dashboard"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"32cab3a58002fff3.json","parameterValues":[]}
{"uid":"5a5d4cc9d84a1d3e","name":"test_units_available_module","fullName":"tests.test_ods_unitsAvailable_module#test_units_available_module","historyId":"4cf2e077bafd4719e464670f178b710c","time":{"start":1752497148268,"stop":1752497223266,"duration":74998},"description":"\n    Test the Unit Availability module for correct login, navigation, and unit assertions.\n    ","descriptionHtml":"<pre><code>Test the Unit Availability module for correct login, navigation, and unit assertions.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ccea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x00000001033c4dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000102f163ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000102f5d544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x0000000102f9e934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x0000000102f51834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x000000010338ffc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x000000010339322c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000103371a08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000103393ae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000103362a98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x00000001033b39d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x00000001033b3b64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x00000001033c49e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"787e96b34bb367a00081d98ad7d12bd7\")>\n\n    def test_units_available_module(driver):\n        \"\"\"\n        Test the Unit Availability module for correct login, navigation, and unit assertions.\n        \"\"\"\n        driver.get(\"https://opendoors--qa.sandbox.my.salesforce.com\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n        action = ActionChains(driver)\n    \n        # Step 1: Login\n        wait.until(ec.visibility_of_element_located((By.CSS_SELECTOR, \"#logo\")))\n        driver.find_element(By.CSS_SELECTOR, \"#username\").send_keys(\"udeme@opendoorsatl.org.qa\")\n        driver.find_element(By.CSS_SELECTOR, \"#password\").send_keys(\"1Gconnect!\")\n        driver.find_element(By.CSS_SELECTOR, \"#Login\").click()\n    \n        # Step 2: Home Page\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, \"div[class='slds-global-header__item'] div[class='slds-global-header__logo']\"))).click()\n    \n        # Step 3: Dashboard Module\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, 'a[href=\"/lightning/o/Unit_Availability__c/home'))).click()\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//button[@title='Select a List View: Unit Availability']\"))).click()\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//button[@title='This list is pinned.']\"))).click()\n    \n        # Step 4: Assert available Unit\n        unit1 = wait.until(ec.visibility_of_element_located((By.XPATH, '//span[@title=\"Unit Name\" and contains(@class, \"slds-truncate\")]')))\n        assert unit1.text == \"Unit Name\"\n>       unit2 = wait.until(ec.visibility_of_element_located((By.XPATH, \"//tr[@data-row-key-value='a2yEa0000012MOrIAM']//a[text()='news']\")))\n\ntests/test_ods_unitsAvailable_module.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"787e96b34bb367a00081d98ad7d12bd7\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x111041a60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001033ccea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x00000001033c4dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x0000000102f163ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000102f5d544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x0000000102f9e934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x0000000102f51834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x000000010338ffc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x000000010339322c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000103371a08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000103393ae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000103362a98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x00000001033b39d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x00000001033b3b64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x00000001033c49e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1752496514058,"stop":1752496514114,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1752497147754,"stop":1752497148268,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Test the Unit Availability module for correct login, navigation, and unit assertions.\n    ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ccea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x00000001033c4dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000102f163ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000102f5d544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x0000000102f9e934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x0000000102f51834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x000000010338ffc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x000000010339322c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000103371a08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000103393ae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000103362a98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x00000001033b39d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x00000001033b3b64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x00000001033c49e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"787e96b34bb367a00081d98ad7d12bd7\")>\n\n    def test_units_available_module(driver):\n        \"\"\"\n        Test the Unit Availability module for correct login, navigation, and unit assertions.\n        \"\"\"\n        driver.get(\"https://opendoors--qa.sandbox.my.salesforce.com\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n        action = ActionChains(driver)\n    \n        # Step 1: Login\n        wait.until(ec.visibility_of_element_located((By.CSS_SELECTOR, \"#logo\")))\n        driver.find_element(By.CSS_SELECTOR, \"#username\").send_keys(\"udeme@opendoorsatl.org.qa\")\n        driver.find_element(By.CSS_SELECTOR, \"#password\").send_keys(\"1Gconnect!\")\n        driver.find_element(By.CSS_SELECTOR, \"#Login\").click()\n    \n        # Step 2: Home Page\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, \"div[class='slds-global-header__item'] div[class='slds-global-header__logo']\"))).click()\n    \n        # Step 3: Dashboard Module\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, 'a[href=\"/lightning/o/Unit_Availability__c/home'))).click()\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//button[@title='Select a List View: Unit Availability']\"))).click()\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//button[@title='This list is pinned.']\"))).click()\n    \n        # Step 4: Assert available Unit\n        unit1 = wait.until(ec.visibility_of_element_located((By.XPATH, '//span[@title=\"Unit Name\" and contains(@class, \"slds-truncate\")]')))\n        assert unit1.text == \"Unit Name\"\n>       unit2 = wait.until(ec.visibility_of_element_located((By.XPATH, \"//tr[@data-row-key-value='a2yEa0000012MOrIAM']//a[text()='news']\")))\n\ntests/test_ods_unitsAvailable_module.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"787e96b34bb367a00081d98ad7d12bd7\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x111041a60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001033ccea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x00000001033c4dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x0000000102f163ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000102f5d544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x0000000102f9e934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x0000000102f51834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x000000010338ffc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x000000010339322c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000103371a08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000103393ae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000103362a98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x00000001033b39d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x00000001033b3b64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x00000001033c49e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"e2b3a9e604e6d2d4","name":"test_units_available_module_screenshot","source":"e2b3a9e604e6d2d4.png","type":"image/png","size":71573},{"uid":"a802c1b76154f859","name":"test_units_available_module_html","source":"a802c1b76154f859.html","type":"text/html","size":631044}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1752497223384,"stop":1752497223487,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_ods_unitsAvailable_module"},{"name":"host","value":"MacBookPro"},{"name":"thread","value":"24598-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_ods_unitsAvailable_module"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"5a5d4cc9d84a1d3e.json","parameterValues":[]}
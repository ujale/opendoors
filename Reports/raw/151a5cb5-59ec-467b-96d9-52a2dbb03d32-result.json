{"name": "test_create_applicant_only_referral", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000104aa6668 cxxbridge1$str$ptr + 2723108\n1   chromedriver                        0x0000000104a9e8dc cxxbridge1$str$ptr + 2690968\n2   chromedriver                        0x00000001045f2714 cxxbridge1$string$len + 90428\n3   chromedriver                        0x00000001046397c0 cxxbridge1$string$len + 381416\n4   chromedriver                        0x000000010467ade8 cxxbridge1$string$len + 649232\n5   chromedriver                        0x000000010462d9c8 cxxbridge1$string$len + 332784\n6   chromedriver                        0x0000000104a6a28c cxxbridge1$str$ptr + 2476360\n7   chromedriver                        0x0000000104a6d520 cxxbridge1$str$ptr + 2489308\n8   chromedriver                        0x0000000104a4ba78 cxxbridge1$str$ptr + 2351412\n9   chromedriver                        0x0000000104a6dda8 cxxbridge1$str$ptr + 2491492\n10  chromedriver                        0x0000000104a3cd6c cxxbridge1$str$ptr + 2290728\n11  chromedriver                        0x0000000104a8dd74 cxxbridge1$str$ptr + 2622512\n12  chromedriver                        0x0000000104a8df00 cxxbridge1$str$ptr + 2622908\n13  chromedriver                        0x0000000104a9e528 cxxbridge1$str$ptr + 2690020\n14  libsystem_pthread.dylib             0x0000000183c4c2e4 _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000183c470fc thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c07529177b55442a09d7ec8f0dacea71\")>\n\n    def test_create_applicant_only_referral(driver):\n        \"\"\"\n        Automates the login and applicant-only referral creation process on the Open Doors QA site.\n        \"\"\"\n        driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n        action = ActionChains(driver)\n    \n        try:\n            # Step 1: Go to website\n            driver.get(\"https://community-qa.opendoorsatl.org\")\n    \n            # Step 2: Login\n            wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, \"img[alt='Open Doors Community']\")))\n            login_field = driver.find_element(By.CSS_SELECTOR, \"div#sfdc_username_container  .input.inputBox\")\n            login_field.send_keys(\"udeme@opendoorsatl.org.qa.casemanager\")\n    \n            password_field = driver.find_element(By.CSS_SELECTOR, \"div#sfdc_password_container  .input.inputBox\")\n            password_field.send_keys(\"13Gconnect,\")\n    \n            login_btn = driver.find_element(By.CSS_SELECTOR, \".loginButton.slds-button.slds-button--brand.uiButton.uiButton--none > .bBody.label\")\n            login_btn.click()\n    \n            # Step 3: Wait for home and navigate to CAOR\n>           wait.until(EC.visibility_of_element_located((By.LINK_TEXT, \"Home\")))\n\ntests/test_applicant_referral.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c07529177b55442a09d7ec8f0dacea71\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x103e86ee0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104aa6668 cxxbridge1$str$ptr + 2723108\nE       1   chromedriver                        0x0000000104a9e8dc cxxbridge1$str$ptr + 2690968\nE       2   chromedriver                        0x00000001045f2714 cxxbridge1$string$len + 90428\nE       3   chromedriver                        0x00000001046397c0 cxxbridge1$string$len + 381416\nE       4   chromedriver                        0x000000010467ade8 cxxbridge1$string$len + 649232\nE       5   chromedriver                        0x000000010462d9c8 cxxbridge1$string$len + 332784\nE       6   chromedriver                        0x0000000104a6a28c cxxbridge1$str$ptr + 2476360\nE       7   chromedriver                        0x0000000104a6d520 cxxbridge1$str$ptr + 2489308\nE       8   chromedriver                        0x0000000104a4ba78 cxxbridge1$str$ptr + 2351412\nE       9   chromedriver                        0x0000000104a6dda8 cxxbridge1$str$ptr + 2491492\nE       10  chromedriver                        0x0000000104a3cd6c cxxbridge1$str$ptr + 2290728\nE       11  chromedriver                        0x0000000104a8dd74 cxxbridge1$str$ptr + 2622512\nE       12  chromedriver                        0x0000000104a8df00 cxxbridge1$str$ptr + 2622908\nE       13  chromedriver                        0x0000000104a9e528 cxxbridge1$str$ptr + 2690020\nE       14  libsystem_pthread.dylib             0x0000000183c4c2e4 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000183c470fc thread_start + 8\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "description": "\n    Automates the login and applicant-only referral creation process on the Open Doors QA site.\n    ", "attachments": [{"name": "stdout", "source": "e7c033f3-8d17-4aa7-ae8e-e216d52ca2d2-attachment.txt", "type": "text/plain"}], "start": 1749753191947, "stop": 1749753225082, "uuid": "9957776a-a1ee-4744-9c0a-4905afaef9ce", "historyId": "4c9ae222d6cd6997d6621db748de3c16", "testCaseId": "4c9ae222d6cd6997d6621db748de3c16", "fullName": "tests.test_applicant_referral#test_create_applicant_only_referral", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_applicant_referral"}, {"name": "host", "value": "Udemes-MacBook-Pro.local"}, {"name": "thread", "value": "31171-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_applicant_referral"}]}
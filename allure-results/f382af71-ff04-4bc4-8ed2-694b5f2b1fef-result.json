{"name": "test_pm_login_logout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010457cea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000104574dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001040c63ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x000000010410d544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x000000010414e934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x0000000104101834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x000000010453ffc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x000000010454322c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000104521a08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000104543ae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000104512a98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x00000001045639d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000104563b64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x00000001045749e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4988b7b909baa56bfea8024fa9976dfb\")>\n\n    def test_pm_login_logout(driver):\n        \"\"\"\n        Test login and logout functionality for the Property Manager user.\n        \"\"\"\n        driver.get(\"https://community-qa.opendoorsatl.org\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n        action = ActionChains(driver)\n    \n        # Step 1: Login\n>       wait.until(ec.visibility_of_element_located((By.CSS_SELECTOR, \"img[alt='Open Doors Community']\")))\n\ntests/test_PM_Login_logout.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4988b7b909baa56bfea8024fa9976dfb\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x102244ca0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010457cea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000104574dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001040c63ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x000000010410d544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x000000010414e934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x0000000104101834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x000000010453ffc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x000000010454322c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000104521a08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000104543ae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000104512a98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x00000001045639d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000104563b64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x00000001045749e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "description": "\n    Test login and logout functionality for the Property Manager user.\n    ", "attachments": [{"name": "test_pm_login_logout_screenshot", "source": "fb63fd27-c9b7-47c3-979f-a7c394f79851-attachment.png", "type": "image/png"}, {"name": "test_pm_login_logout_html", "source": "084b6094-3dd6-4a90-9641-3b421d3be7dc-attachment.html", "type": "text/html"}], "start": 1752502990547, "stop": 1752503006713, "uuid": "5f99a70e-2290-4127-a7bd-d092918512b0", "historyId": "233aeae22c7942e6f18ec64006c97c82", "testCaseId": "233aeae22c7942e6f18ec64006c97c82", "fullName": "tests.test_PM_Login_logout#test_pm_login_logout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_PM_Login_logout"}, {"name": "host", "value": "MacBookPro"}, {"name": "thread", "value": "32575-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_PM_Login_logout"}]}
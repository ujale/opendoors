{"name": "test_ods_reports_module", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000104c84ea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000104c7cdac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001047ce3ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104815544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x0000000104856934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x0000000104809834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x0000000104c47fc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x0000000104c4b22c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000104c29a08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000104c4bae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x0000000104c1aa98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x0000000104c6b9d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000104c6bb64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x0000000104c7c9e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb70484636fe42019e187e8af471308f\")>\n\n    def test_ods_reports_module(driver):\n        \"\"\"\n        Test the Reports module for correct login, navigation, sidebar, and report creation.\n        \"\"\"\n        from selenium.webdriver.common.by import By\n        from selenium.webdriver.support import expected_conditions as ec\n        from selenium.webdriver.support.wait import WebDriverWait\n        from time import sleep\n    \n        driver.get(\"https://opendoors--qa.sandbox.my.salesforce.com\")\n        driver.maximize_window()\n        wait = WebDriverWait(driver, 15)\n    \n        # Step 1: Login\n        wait.until(ec.visibility_of_element_located((By.CSS_SELECTOR, \"#logo\")))\n        driver.find_element(By.CSS_SELECTOR, \"#username\").send_keys(\"udeme@opendoorsatl.org.qa\")\n        driver.find_element(By.CSS_SELECTOR, \"#password\").send_keys(\"1Gconnect!\")\n        driver.find_element(By.CSS_SELECTOR, \"#Login\").click()\n    \n        # Step 2: Home Page\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, \"div[class='slds-global-header__item'] div[class='slds-global-header__logo']\"))).click()\n    \n        # Step 3: Report Tab\n        wait.until(ec.element_to_be_clickable((By.CSS_SELECTOR, 'a[href=\"/lightning/o/Report/home\"]'))).click()\n        sleep(2)\n        # Sidebar assertions\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"/html/body//a[@role='tab' and @title='Recent' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Recent\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='Created by Me' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Created by Me\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='Private Reports' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Private Reports\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='Public Reports' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Public Reports\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='All Reports' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"All Reports\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='All Folders' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"All Folders\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='Created by Me' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Created by Me\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='Shared with Me' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"Shared with Me\"\n        assert wait.until(ec.visibility_of_element_located((By.XPATH, \"//a[@role='tab' and @title='All Favorites' and contains(@class, 'slds-nav-vertical__action')]\"))).text == \"All Favorites\"\n    \n        # Step 4: New Report\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//a[@title='New Report' and @role='button' and contains(@class, 'forceActionLink')]/div[@title='New Report']\"))).click()\n        # Wait for the iframe to load and locate it\n        iframe = wait.until(ec.presence_of_element_located((By.XPATH, \"//*[@id='brandBand_2']/div/div/div/iframe\")))\n        driver.switch_to.frame(iframe)\n    \n        # Locate the element inside the iframe\n        element = wait.until(ec.presence_of_element_located((By.CSS_SELECTOR, 'a[aria-label=\"All Report Type Category\"]')))\n        element.click()\n        print(\"Link Title is :\", element.text)\n        driver.find_element(By.ID, \"modal-search-input\").send_keys(\"Tab\")\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//a[@class='slds-text-link_reset' and @href='#' and @aria-label='']/p[@class='slds-truncate' and @data-tooltip='Tab Click Log']\"))).click()\n        wait.until(ec.element_to_be_clickable((By.XPATH, \"//button[@class='slds-button slds-button_brand asset-action-button' and @id='start-report-btn' and @type='button']\"))).click()\n>       wait.until(ec.element_to_be_clickable((By.XPATH, \"//h2[@class='tab-title' and text()='Filters']\"))).click()\n\ntests/test_ods_reports_module.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb70484636fe42019e187e8af471308f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x1024764c0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104c84ea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000104c7cdac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001047ce3ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000104815544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x0000000104856934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x0000000104809834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x0000000104c47fc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x0000000104c4b22c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000104c29a08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000104c4bae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x0000000104c1aa98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x0000000104c6b9d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000104c6bb64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x0000000104c7c9e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019350ec0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000193509b80 thread_start + 8\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "description": "\n    Test the Reports module for correct login, navigation, sidebar, and report creation.\n    ", "attachments": [{"name": "test_ods_reports_module_screenshot", "source": "44887792-d5ed-47fa-a633-268a0fe1e535-attachment.png", "type": "image/png"}, {"name": "test_ods_reports_module_html", "source": "559b4411-16c6-49f9-a0e6-0f571946d8dc-attachment.html", "type": "text/html"}, {"name": "stdout", "source": "2eafc7df-54db-4168-a21b-e3881e673e3d-attachment.txt", "type": "text/plain"}], "start": 1752503424624, "stop": 1752503497140, "uuid": "f4fac292-59d0-417f-bf56-cb4f145113e5", "historyId": "07ab5051291a40a8c2f1202633f07546", "testCaseId": "07ab5051291a40a8c2f1202633f07546", "fullName": "tests.test_ods_reports_module#test_ods_reports_module", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ods_reports_module"}, {"name": "host", "value": "MacBookPro"}, {"name": "thread", "value": "32575-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ods_reports_module"}]}